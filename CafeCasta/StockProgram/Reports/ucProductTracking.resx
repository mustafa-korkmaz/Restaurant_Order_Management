<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_yazdir.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAANTSURBVEhLrZZZSFRhGIYPQhBWdCN0FV5oCwVBF0EEwpSEBUUX2kVkoGOWjWOWuZs6hhuiZqm5
        p5m7KeOoWZq7ZmoquaLl1kyzOK4zjl6+ne94FC2taeyDFwbO+zz//58Zzhlmp/H1C+h7lpgMY0JdHjN+
        YuMT8F2ugOKHEkqVGmrNDGa0s5idm8P8wgIWl5ag1+uxbDCAujxm/IRHRm+R6XSsbHkZKysrWF1d3RLq
        8tjfx8fPn7s1wSESGLaR0QIGdte0GJ1Ap9NxXWKI5TU7T3RMLKSyKrqvm2SGDRmdZoE91Rx7uhmtFmq1
        husSQyyv2XlCJE9QUloOT8+HWNok05JMo4FSqYSc/W6mpqbxbXwCo2NjXJcYYnnNzuPt44fcvALcdROx
        MhXkClY2PY1xTvYVQ8Mj6O8fQE9vHzq7utHW/pHrEkMsr9k6e1JGDtlmtcvts5shcvdARmY2nJyEaGpu
        QX1DA97X1qL6bQ0qZJV4U1aOouISvM7LR1Z2DlLTM7guMcSSg1zk3JBfyGiVu1QMILBNgbT0TGRm5SAx
        KeWfQgyxfq0KCKX9ICe3iCC9Re5U/gXRvXMoHddBWlG1q+SP6RD2eRau7IbJzVxNq4NzowqS7llIJ/V4
        zv7cdpOyCT18O7RwaVSD3MzlpGo4f1DgQasKGUPzCE3OgUgkNinEprMOtyYlhPUKkJu5GF8Gx5pJ3GQj
        qp9GRKcKMd1qk0IsORwqx3Hr3STIzQgiC+EgHYWgcBB2JcP/JTYFg2tO1s3YSLJwpbgfx1I7cTLN9FhL
        imEVlMvFMqSIc5KbORv4AravunAgsg4Ho+tNzj5xCkbyxehJsIO5eM1JbuaM91MIMtvBBFXsLm7JYFzi
        18J+Jie5mdPiKAhSG7E/uByMb/Fa7O6YFp4nFznJzRz3iF08H/YSguTajRy94Qmhiys6PnUaFeoSs9lB
        TnIze+M67I64RSydcPIHxerabVicOgd38X3ucUyRyWTbZv06dYkhdt1DTnJzz6P1sQgoSLK2vwfLS454
        5O0LHb0DjAh1iSGWHLzu9zEzMzM/LAzTWF8X43Fw6MZbbLvdU9avU5cYYsnB6/484RFR3JvMmFCXx4wf
        Ly/vvjj234IxoS6P/TIM8xPJ1h5KrLLmsAAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="printingSystem1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>